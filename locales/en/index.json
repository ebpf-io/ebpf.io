{
  "meta": {
    "title": "eBPF - Introduction, Tutorials & Community Resources",
    "description": "eBPF is a revolutionary technology that can run sandboxed programs in the Linux kernel without changing kernel source code or loading a kernel module."
  },
  "hero": {
    "title": "Dynamically program the kernel for efficient networking, observability, tracing, and security",
    "blackButtonTitle": "Project Landscape",
    "blackButtonUrl": "/applications",
    "yellowButtonTitle": "What is eBPF",
    "yellowButtonUrl": "/what-is-ebpf",
    "altImage": "eBPF diagram",
    "items": [
      "Programs are verified to safely execute",
      "Hook anywhere in the kernel to modify functionality",
      "JIT compiler for near native execution speed",
      "Add OS capabilities at runtime"
    ]
  },
  "caseStudies": {
    "title": "Organizations in every industry use eBPF in production",
    "linkText": "More case studies",
    "linkUrl": "/case-studies/"
  },
  "whyEbpf": {
    "title": "Why eBPF?",
    "linkTitle": "What is eBPF",
    "linkUrl": "/what-is-ebpf/",
    "items": [
      {
        "title": "Performance",
        "icon": "performance",
        "description": "eBPF drastically improves processing by being JIT compiled and running directly in the kernel."
      },
      {
        "title": "Security",
        "icon": "security",
        "description": "eBPF programs are verified to not crash the kernel and can only be modified by privileged users."
      },
      {
        "title": "Flexibility",
        "icon": "flexibility",
        "description": "Modify or add functionality and use cases to the kernel without having to restart or patch it."
      }
    ]
  },
  "film": {
    "label": "premiere",
    "title": "Unlocking the Kernel",
    "videoId": "Wb_vD3XZYOA",
    "description": "The eBPF Documentary provides an in-depth exploration on the origins of eBPF and showcases the stories, challenges, and rewards of this industry changing technology. You will hear from the best and brightest in the open source world, including key stakeholders from Meta, Intel, Isovalent, Google, Red Hat, and Netflix, who helped shape and build the tools that drove the success and adoption of eBPF.",
    "buttonText": "eBPF Documentary Website",
    "buttonUrl": "https://ebpfdocumentary.com/"
  },
  "testimonials": {
    "items": [
      {
        "logo": "azure",
        "logoWidth": 134,
        "company": "Microsoft Azure",
        "review": "eBPF has resulted in a new generation of tooling that allows developers to easily diagnose problems, innovate quickly, and extend operating system functionality.",
        "author": "Mark Russinovich",
        "role": "Chief Technology Officer at Microsoft Azure, 2021"
      },
      {
        "logo": "google",
        "logoWidth": 104,
        "company": "Google",
        "review": "eBPF is the future of networking for the Linux kernel and Google is pleased to be part of the evolving standard it has created.",
        "author": "Chris DiBona",
        "role": "Director of Open Source at Google, 2021"
      },
      {
        "logo": "isovalent",
        "logoWidth": 148,
        "company": "Isovalent",
        "review": "Even though eBPF has already found its ways into the production stacks of countless enterprises, we are still at the beginning of the innovation curve that eBPF as a technology unlocks",
        "author": "Thomas Graf",
        "role": "Chief Technology Officer at Isovalent, 2021"
      },
      {
        "logo": "meta",
        "logoWidth": 120,
        "company": "Meta",
        "review": "For many years, eBPF has played a critical role in accelerating the kernel development. We’re excited to support the work of the eBPF community, enabling them to build the tools needed to power the next generation of Linux system development.",
        "author": "Chris Mason",
        "role": "Kernel Maintainer and Engineering Director at Facebook, 2021"
      },
      {
        "logo": "netflix",
        "logoWidth": 109,
        "company": "Netflix",
        "review": "eBPF is a new type of software that provides superpower capabilities, birthing an industry of networking, performance, and security technologies. Netflix has pioneered uses of eBPF for observability, providing insight into countless areas that were previously difficult or prohibitively expensive to instrument. eBPF has helped us lower application latency and find cost savings.",
        "author": "Brendan Gregg",
        "role": "Senior performance engineer at Netflix, 2021"
      }
    ]
  },
  "features": {
    "title": "What’s possible with eBPF?",
    "items": [
      {
        "bgClassName": "bg-secondary-yellow-light",
        "image": "networking",
        "title": "Networking",
        "description": "Speed packet processing without leaving kernel space. Add additional protocol parsers and easily program any forwarding logic to meet changing requirements."
      },
      {
        "bgClassName": "bg-secondary-green-light",
        "image": "observability",
        "title": "Observability",
        "description": "Collection and in-kernel aggregation of custom metrics with generation of visibility events and data structures from a wide range of possible sources without having to export samples."
      },
      {
        "bgClassName": "bg-secondary-blue-light",
        "image": "tracingAndProfiling",
        "title": "Tracing & Profiling",
        "description": "Attach eBPF programs to trace points as well as kernel and user application probe points giving powerful introspection abilities and unique insights to troubleshoot system performance problems."
      },
      {
        "bgClassName": "bg-secondary-red-light",
        "image": "security",
        "title": "Security",
        "description": "Combine seeing and understanding all system calls with a packet and socket-level view of all networking to create security systems operating on more context with a better level of control."
      }
    ]
  },
  "videoGallery": {
    "title": "eBPF Community Talks",
    "items": [
      {
        "videoId": "6N30Yp5f9c4",
        "title": "BPF and Spectre: Mitigating transient execution attacks",
        "speaker": "Daniel Borkmann, Isovalent",
        "date": "Aug 20, 2021"
      },
      {
        "videoId": "_5Z2AU7QTH4",
        "title": "BPF Internals",
        "speaker": "Brendan Gregg, Netflix",
        "date": "Jun 9, 2021"
      },
      {
        "videoId": "PJY-rN1EsVw",
        "title": "Advanced BPF kernel features for the container age",
        "speaker": "Daniel Borkmann, Isovalent",
        "date": "Feb 9, 2021"
      },
      {
        "videoId": "slBAYUDABDA",
        "title": "The Future of eBPF based Networking and Security",
        "speaker": "Thomas Graf, Isovalent",
        "date": "Nov 8, 2020"
      },
      {
        "videoId": "Qhm1Zn_BNi4",
        "title": "BPF as a Fundamentally Better Dataplane",
        "speaker": "Daniel Borkmann, Isovalent",
        "date": "Nov 8, 2020"
      },
      {
        "videoId": "ZYBXZFKPS28",
        "title": "BPF at Facebook",
        "speaker": "Alexei Starovoitov, Facebook",
        "date": "Dec 19, 2019"
      },
      {
        "videoId": "_Iq1xxNZOAo",
        "title": "How to Make Linux Microservice-Aware with Cilium and eBPF",
        "speaker": "Thomas Graf, Isovalent",
        "date": "Mar 6, 2019"
      }
    ]
  }
}
